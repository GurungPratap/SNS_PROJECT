# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2  # use CircleCI 2.0
jobs:  # a collection of steps
  build:  # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # specify the version you desire here
      - image: cimg/openjdk:17.0.2

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/sns # directory where steps will run

    steps: # a collection of executable commands
      - checkout  # check out source code to working directory

      # Download and cache dependencies
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys: sns-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache:
          paths:
            - ~/.m2
          key: sns-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn package # run the actual tests
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
          # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples